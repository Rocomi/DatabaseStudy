DROP USER "C##HOMEWORK" CASCADE; 

CREATE USER "C##WORKBOOK" IDENTIFIED BY WORKBOOK;
GRANT CONNECT, RESOURCE TO "C##WORKBOOK";
ALTER USER "C##WORKBOOK" DEFAULT TABLESPACE USERS QUOTA UNLIMITED ON USERS;

/*
                    Self Study Workbook v2.0
*/
-----------------------------------------------------
--                   BASIC SELECT
-----------------------------------------------------
-- 1.
SELECT DEPARTMENT_NAME "학과 명", CATEGORY 계열
FROM TB_DEPARTMENT;

-- 2.
SELECT DEPARTMENT_NAME ||'의 정원은' || CAPACITY || '명 입니다.' "학과별 정원"
FROM TB_DEPARTMENT;

-- 3.
SELECT STUDENT_NAME
FROM TB_STUDENT S, TB_DEPARTMENT D
WHERE S.DEPARTMENT_NO = D.DEPARTMENT_NO 
    AND DEPARTMENT_NAME = '국어국문학과'
    AND ABSENCE_YN = 'Y'
    AND SUBSTR(STUDENT_SSN, 8,1) = 2;
    
-- 4.
SELECT STUDENT_NAME
FROM TB_STUDENT
WHERE STUDENT_NO IN ('A513079', 'A513090', 'A513091', 'A513110', 'A513119');

-- 5.
SELECT DEPARTMENT_NAME, CATEGORY
FROM TB_DEPARTMENT
WHERE CAPACITY BETWEEN 20 AND 30;

-- 6. 
SELECT PROFESSOR_NAME
FROM TB_PROFESSOR
WHERE DEPARTMENT_NO IS NULL;

-- 7.
SELECT STUDENT_NAME
FROM TB_STUDENT
WHERE DEPARTMENT_NO IS NULL;

-- 8.
SELECT CLASS_NO
FROM TB_CLASS
WHERE PREATTENDING_CLASS_NO IS NOT NULL;

-- 9.
SELECT DISTINCT CATEGORY
FROM TB_DEPARTMENT;

-- 10. 
SELECT STUDENT_NO, STUDENT_NAME, STUDENT_SSN
FROM TB_STUDENT
WHERE SUBSTR(STUDENT_NO,1,2) = 'A2'
    AND STUDENT_ADDRESS LIKE '전주%'
    AND ABSENCE_YN = 'N';
    
-----------------------------------------------------
--           [Additional SELECT - 함수]
-----------------------------------------------------
-- 1.
SELECT STUDENT_NO 학번, STUDENT_NAME 이름, TO_CHAR(ENTRANCE_DATE, 'YYYY-MM-DD') 입학년도
FROM TB_STUDENT
WHERE DEPARTMENT_NO = '002';

-- 2.
SELECT PROFESSOR_NAME, PROFESSOR_SSN
FROM TB_PROFESSOR
WHERE LENGTH(PROFESSOR_NAME) != 3;

-- 3.
SELECT PROFESSOR_NAME 교수이름,TRUNC((SYSDATE - TO_DATE(SUBSTR(PROFESSOR_SSN,1,6)))/ 365)  나이
FROM TB_PROFESSOR
WHERE SUBSTR(PROFESSOR_SSN,8,1) = 1;

--------------------------------------------------------------------------------------------------------------------------------(나이 마이너스 값)
-- 4. 
SELECT SUBSTR(PROFESSOR_NAME,2) 이름
FROM  TB_PROFESSOR;

-- 5.
SELECT STUDENT_NO, STUDENT_NAME
FROM TB_STUDENT
WHERE EXTRACT(YEAR FROM ENTRANCE_DATE) -1900- SUBSTR(STUDENT_SSN,1,2) > 19;

-- 6.
SELECT TO_CHAR(TO_DATE('2020/12/25'), 'DAY')
FROM DUAL;

-- 7.
-- TO_DATE('99/10/11','YY/MM/DD') = 1999-10-11
-- TO_DATE('49/10/11','YY/MM/DD') = 1949-10-11
-- TO_DATE('99/10/11','RR/MM/DD') = 1999-10-11
-- TO_DATE('49/10/11','RR/MM/DD') = 2049-10-11

-- 8.
SELECT STUDENT_NO, STUDENT_NAME
FROM TB_STUDENT
WHERE SUBSTR(STUDENT_NO,1,1) != 'A';

-- 9. 
SELECT TRUNC(AVG(POINT),1)
FROM TB_GRADE 
WHERE STUDENT_NO = 'A517178';

-- 10.
SELECT DEPARTMENT_NO, COUNT(*)
FROM TB_STUDENT
GROUP BY DEPARTMENT_NO
ORDER BY DEPARTMENT_NO;

-- 11.
SELECT COUNT(*)
FROM TB_STUDENT
WHERE COACH_PROFESSOR_NO IS NULL;

-- 12.
SELECT SUBSTR(TERM_NO, 1,4) "년도", ROUND(AVG(POINT),1) "년도별 평점"
FROM TB_GRADE
WHERE STUDENT_NO = 'A112113'
GROUP BY SUBSTR(TERM_NO, 1,4);

-- 13.
SELECT DEPARTMENT_NO 학과코드명, COUNT(DECODE(ABSENCE_YN, 'Y',1 )) "휴학생 수"
FROM TB_STUDENT
GROUP BY DEPARTMENT_NO
ORDER BY DEPARTMENT_NO;

-- 14. 
SELECT STUDENT_NAME 동일이름, COUNT(STUDENT_NAME) "동명인 수"
FROM TB_STUDENT
WHERE STUDENT_NAME = STUDENT_NAME
GROUP BY STUDENT_NAME
HAVING COUNT(*)>1;

-- 15.
SELECT SUBSTR(TERM_NO, 1,4) 년도, SUBSTR(TERM_NO, 5,2) 학기, POINT 평점
FROM TB_GRADE 
WHERE STUDENT_NO = 'A112113'
ORDER BY SUBSTR(TERM_NO, 1,4), SUBSTR(TERM_NO, 5,2);
----------------------------------------------------------------------------------------------------------------------------------모르겟.....
-----------------------------------------------------
--           [Additional SELECT - Option]
-----------------------------------------------------

-- 1.
SELECT STUDENT_NAME 학생이름, STUDENT_ADDRESS 주소지
FROM TB_STUDENT
ORDER BY STUDENT_NAME;

-- 2. 
SELECT STUDENT_NAME, STUDENT_SSN 
FROM TB_STUDENT
WHERE ABSENCE_YN  = 'Y'
ORDER BY STUDENT_SSN DESC;

-- 3.
SELECT STUDENT_NAME 학생이름, STUDENT_NO 학번, STUDENT_ADDRESS "거주지 주소"
FROM TB_STUDENT
WHERE (STUDENT_ADDRESS LIKE '강원도%' 
    OR STUDENT_ADDRESS LIKE '경기도%')
    AND STUDENT_NO LIKE '9%';

-- 4.
SELECT PROFESSOR_NAME, PROFESSOR_SSN
FROM TB_PROFESSOR
WHERE DEPARTMENT_NO = '005'
ORDER BY PROFESSOR_SSN;

-- 5.
SELECT STUDENT_NO, POINT
FROM TB_GRADE
WHERE CLASS_NO = 'C3118100'
    AND TERM_NO = '200402'
ORDER BY POINT DESC, STUDENT_NO;

-- 6.
SELECT STUDENT_NO, STUDENT_NAME, DEPARTMENT_NAME
FROM TB_STUDENT 
JOIN TB_DEPARTMENT USING (DEPARTMENT_NO) 
ORDER BY STUDENT_NAME;

-- 7.
SELECT CLASS_NAME, DEPARTMENT_NAME 
FROM TB_CLASS
    JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
ORDER BY DEPARTMENT_NAME;

-- 8. 
SELECT CLASS_NAME, PROFESSOR_NAME 
FROM TB_CLASS C, TB_PROFESSOR P
WHERE C.DEPARTMENT_NO = P.DEPARTMENT_NO
GROUP BY CLASS_NAME, PROFESSOR_NAME
ORDER BY CLASS_NAME;
------------------------------------------------------------------------------------------------------------------------------------갯수 초과

-- 9.
SELECT CLASS_NAME, PROFESSOR_NAME, CATEGORY
FROM TB_CLASS 
    JOIN TB_PROFESSOR USING (DEPARTMENT_NO)
    JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
WHERE CATEGORY = '인문사회'
ORDER BY PROFESSOR_NAME;
----------------------------------------------------------------------------------------------------------------------------------갯수 초과 2

-- 10.
SELECT STUDENT_NO 학번, STUDENT_NAME "학생 이름", ROUND(AVG(POINT),1) "전체 평점"
FROM TB_STUDENT
    JOIN TB_GRADE USING (STUDENT_NO)
    JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = '음악학과'
GROUP BY STUDENT_NO,STUDENT_NAME;

-- 11.
SELECT DEPARTMENT_NAME, STUDENT_NAME, PROFESSOR_NAME
FROM TB_STUDENT
    JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
    JOIN TB_PROFESSOR ON (COACH_PROFESSOR_NO = PROFESSOR_NO)
WHERE STUDENT_NO = 'A313047';

-- 12.
SELECT STUDENT_NAME, TERM_NO "TERM_NAME" 
FROM TB_STUDENT
    JOIN TB_GRADE USING (STUDENT_NO)
    JOIN TB_CLASS USING (CLASS_NO)
WHERE CLASS_NAME = '인간관계론'
    AND SUBSTR(TERM_NO,1,4) = '2007';

-- 13.
SELECT CLASS_NAME, DEPARTMENT_NAME, PROFESSOR_NO
FROM TB_CLASS
    LEFT JOIN TB_CLASS_PROFESSOR USING (CLASS_NO)
    JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
WHERE PROFESSOR_NO IS NULL AND CATEGORY = '예체능';

-- 14.
SELECT STUDENT_NAME 학생이름, NVL(COACH_PROFESSOR_NO, '지도교수 미지정') 지도교수
FROM TB_STUDENT
    JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = '서반아어학과'
ORDER BY STUDENT_NO;

-- 15.
SELECT STUDENT_NO, STUDENT_NAME, DEPARTMENT_NAME, AVG(POINT) 
FROM TB_STUDENT 
    JOIN TB_GRADE USING (STUDENT_NO)
    JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
WHERE ABSENCE_YN = 'N'
GROUP BY STUDENT_NO, STUDENT_NAME, DEPARTMENT_NAME
HAVING AVG(POINT) >= 4.0;

-- 16.
SELECT CLASS_NO, CLASS_NAME, AVG(POINT)
FROM TB_GRADE
    JOIN TB_CLASS USING (CLASS_NO)
WHERE
;

-- 17.
SELECT STUDENT_NAME, STUDENT_ADDRESS 
FROM TB_STUDENT 
WHERE DEPARTMENT_NO = (SELECT DEPARTMENT_NO 
                        FROM TB_STUDENT 
                        WHERE STUDENT_NAME = '최경희');

-- 18. 
SELECT STUDENT_NO, STUDENT_NAME
FROM TB_STUDENT
    JOIN TB_GRADE USING (STUDENT_NO)
WHERE DEPARTMENT_NO = '001'
GROUP BY STUDENT_NO, STUDENT_NAME
HAVING AVG(POINT) = (SELECT MAX(AVG(POINT)) 
                        FROM TB_GRADE
                            JOIN TB_STUDENT USING (STUDENT_NO)
                        WHERE DEPARTMENT_NO = '001'
                        GROUP BY STUDENT_NAME);

-- 19.
SELECT DEPARTMENT_NAME "계열 학과명", ROUND(AVG(POINT),1) 전공평점 
FROM TB_GRADE 
    JOIN TB_CLASS USING(CLASS_NO)
    JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
WHERE CATEGORY = (SELECT CATEGORY 
                    FROM TB_DEPARTMENT  
                    WHERE DEPARTMENT_NAME = '환경조경학과')
    AND (CLASS_TYPE = '전공선택' OR CLASS_TYPE = '전공필수')
GROUP BY DEPARTMENT_NO,DEPARTMENT_NAME;

-----------------------------------------------------
--                   [DDL] 
-----------------------------------------------------
-- GRANT CREATE VIEW TO C##WORKBOOK; 뷰 권한 추가

-- 1.
CREATE TABLE TB_CATEGORY(
    NAME VARCHAR2(10),
    USE_YN CHAR(1) DEFAULT 'Y'
);

-- 2.
CREATE TABLE TB_CLASS_TYPE(
    NO VARCHAR2(5) PRIMARY KEY,
    NAME VARCHAR2(10)  
);

-- 3.
ALTER TABLE TB_CATEGORY ADD PRIMARY KEY (NAME);

-- 4.
ALTER TABLE TB_CLASS_TYPE MODIFY NAME NOT NULL;

-- 5. 
ALTER TABLE TB_CLASS_TYPE MODIFY NO VARCHAR2(10); 
ALTER TABLE TB_CATEGORY MODIFY NAME VARCHAR2(20);
ALTER TABLE TB_CLASS_TYPE MODIFY NAME VARCHAR2(20);

-- 6.
ALTER TABLE TB_CATEGORY RENAME COLUMN NAME TO CATEGORY_NAME;
ALTER TABLE TB_CLASS_TYPE RENAME COLUMN NO TO CLASS_TYPE_NO;
ALTER TABLE TB_CLASS_TYPE RENAME COLUMN NAME TO CLASS_TYPE_NAME;

-- 7.
ALTER TABLE TB_CATEGORY RENAME CONSTRAINT SYS_C008658 TO PK_CATEGORY_NAME;
ALTER TABLE TB_CLASS RENAME CONSTRAINT PK_CLASS TO PK_CLASS_NO;

-- 8.
INSERT INTO TB_CATEGORY VALUES ('공학','Y'); 
INSERT INTO TB_CATEGORY VALUES ('자연과학','Y'); 
INSERT INTO TB_CATEGORY VALUES ('의학','Y'); 
INSERT INTO TB_CATEGORY VALUES ('예체능','Y'); 
INSERT INTO TB_CATEGORY VALUES ('인문사회','Y'); 
COMMIT; 

-- 9.
ALTER TABLE TB_DEPARTMENT  
ADD CONSTRAINT FK_DEPARTMENT_CATEGORY FOREIGN KEY (CATEGORY) REFERENCES TB_CATEGORY;

--10.
CREATE OR REPLACE VIEW VW_학생일반정보
AS SELECT STUDENT_NO 학번, STUDENT_NAME 학생이름, STUDENT_ADDRESS 주소
    FROM TB_STUDENT;

-- 11.
CREATE VIEW VW_지도면담
AS SELECT STUDENT_NAME 학생이름, DEPARTMENT_NAME 학과이름, PROFESSOR_NAME 지도교수이름
    FROM TB_STUDENT
        JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
        LEFT JOIN TB_PROFESSOR ON COACH_PROFESSOR_NO  = PROFESSOR_NO
    ORDER BY DEPARTMENT_NAME;

-- 12.
CREATE VIEW VW_학과별학생수
AS SELECT DEPARTMENT_NAME, COUNT(STUDENT_NO) STUDENT_COUNT 
    FROM TB_DEPARTMENT 
        JOIN TB_STUDENT USING (DEPARTMENT_NO)
    GROUP BY DEPARTMENT_NAME; 
    
-- 13.
UPDATE VW_학생일반정보
    SET 학생이름 = '엄희윤'
WHERE 학번 = 'A213046';
    
SELECT * FROM VW_학생일반정보;   
    
-- 14.
CREATE OR REPLACE VIEW VW_학생일반정보
AS SELECT STUDENT_NO 학번, STUDENT_NAME 학생이름, STUDENT_ADDRESS 주소
    FROM TB_STUDENT
WITH READ ONLY;
    
-- 15.   최근 3년....?
    
    
-----------------------------------------------------
--                   [DML] 
-----------------------------------------------------   
-- 1.
INSERT INTO TB_CLASS_TYPE VALUES (01, '전공필수');
INSERT INTO TB_CLASS_TYPE VALUES (02, '전공선택');
INSERT INTO TB_CLASS_TYPE VALUES (03, '교양필수');
INSERT INTO TB_CLASS_TYPE VALUES (04, '교양선택');
INSERT INTO TB_CLASS_TYPE VALUES (05, '논문지도');
SELECT * FROM TB_CLASS_TYPE;

-- 2.
CREATE TABLE TB_학생일반정보
AS SELECT STUDENT_NO, STUDENT_NAME, STUDENT_ADDRESS
    FROM TB_STUDENT
    WHERE 1 = 0;
    
SELECT * FROM TB_학생일반정보;

-- 3.
CREATE TABLE TB_국어국문학과 
AS SELECT STUDENT_NO 학번, STUDENT_NAME 학생이름, '19'||SUBSTR(STUDENT_SSN,1,2) 출생년도, PROFESSOR_NAME 교수이름
    FROM TB_STUDENT S
        JOIN TB_PROFESSOR ON COACH_PROFESSOR_NO = PROFESSOR_NO
    WHERE S.DEPARTMENT_NO = '001';
    
-- 4.
UPDATE TB_DEPARTMENT
    SET CAPACITY = ROUND(CAPACITY * 1.1);

SELECT * FROM TB_DEPARTMENT;

-- 5.
UPDATE TB_STUDENT
    SET STUDENT_ADDRESS = '서울시 종로구 숭인동 181-21'
    WHERE STUDENT_NO = 'A413042';

SELECT * FROM TB_STUDENT WHERE STUDENT_NO = 'A413042';

-- 6.
UPDATE TB_STUDENT
    SET STUDENT_SSN = SUBSTR(STUDENT_SSN,1,6);
    
SELECT STUDENT_SSN FROM TB_STUDENT;

-- 7.
/*
SELECT CLASS_NO
FROM TB_STUDENT
    JOIN TB_GRADE USING (STUDENT_NO)
    JOIN TB_CLASS USING (CLASS_NO)
WHERE STUDENT_NAME = '김명훈'
    AND TERM_NO = '200501'
    AND CLASS_NAME = '피부생리학';
*/   
UPDATE TB_GRADE
    SET POINT = 3.5
    WHERE STUDENT_NO = 'A331101'
        AND TERM_NO = '200501'
        AND CLASS_NO = 'C3843900';

SELECT POINT
FROM TB_STUDENT
    JOIN TB_GRADE USING (STUDENT_NO)
    JOIN TB_CLASS USING (CLASS_NO)
WHERE STUDENT_NAME = '김명훈'
    AND TERM_NO = '200501'
    AND CLASS_NAME = '피부생리학';

-- 8.
SELECT POINT
FROM TB_STUDENT
JOIN TB_GRADE USING(STUDENT_NO)
WHERE ABSENCE_YN  = 'Y';

DELETE 
FROM (SELECT POINT
        FROM TB_GRADE
         JOIN TB_STUDENT USING(STUDENT_NO)
         WHERE ABSENCE_YN  = 'Y');

---------------------------------끝 !!!!!!!!!!!!!!!!----------------------------
